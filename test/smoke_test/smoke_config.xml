<?xml version="1.0" encoding="utf-8"?>
<Tests>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>async</Mode>
            <Extension></Extension>
            <AsyncRequestCount>1</AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>sync</Mode>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>async</Mode>
            <CodeSource>ovbenchmark</CodeSource>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin
            </WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>sync</Mode>
            <CodeSource>ovbenchmark</CodeSource>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin
            </WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>async</Mode>
            <CodeSource>ovbenchmark</CodeSource>
            <Runtime>python</Runtime>
            <Hint>none</Hint>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.xml</ModelPath>
            <WeightsPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/FP32/mobilenet-v1-1.0-224-tf.bin
            </WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>async</Mode>
            <CodeSource>ovbenchmark</CodeSource>
            <Runtime>python</Runtime>
            <Hint>throughput</Hint>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/mobilenet_v1_1.0_224_frozen.pb</ModelPath>
            <WeightsPath>none</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenVINO DLDT</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>async</Mode>
            <CodeSource>ovbenchmark</CodeSource>
            <Frontend>tensorflow</Frontend>
            <InputShape></InputShape>
            <Mean>[127.5,127.5,127.5]</Mean>
            <InputScale>[127.5,127.5,127.5]</InputScale>
            <Layout></Layout>
            <InferenceRequestsCount></InferenceRequestsCount>
            <Extension></Extension>
            <AsyncRequestCount></AsyncRequestCount>
            <ThreadCount></ThreadCount>
            <StreamCount></StreamCount>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>default</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/mobilenet_v1_1.0_224_frozen.pb</ModelPath>
            <WeightsPath>none</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TensorFlow</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <ChannelSwap></ChannelSwap>
            <Mean></Mean>
            <InputScale></InputScale>
            <InputShape>224 224 3</InputShape>
            <InputName>input:0</InputName>
            <OutputNames></OutputNames>
            <ThreadCount></ThreadCount>
            <InterOpParallelismThreads></InterOpParallelismThreads>
            <IntraOpParallelismThreads></IntraOpParallelismThreads>
            <KmpAffinity></KmpAffinity>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>default</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/mobilenet_v1_1.0_224.tflite</ModelPath>
            <WeightsPath>None</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TensorFlowLite</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <ChannelSwap></ChannelSwap>
            <Layout></Layout>
            <Mean>[127.5,127.5,127.5]</Mean>
            <InputScale>[127.5,127.5,127.5]</InputScale>
            <InputShape></InputShape>
            <InputName></InputName>
            <ThreadCount></ThreadCount>
            <Delegate></Delegate>
            <DelegateOptions></DelegateOptions>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>AlexNet</Name>
            <Precision>FP32</Precision>
            <SourceFramework>MXNet</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>MXNet</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>Sync</Mode>
            <InputName>data</InputName>
            <InputShape>1 3 224 224</InputShape>
            <Hybridize>True</Hybridize>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Quantization></Quantization>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>AlexNet</Name>
            <Precision>INT8</Precision>
            <SourceFramework>MXNet</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>MXNet</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>Sync</Mode>
            <InputName>data</InputName>
            <InputShape>1 3 224 224</InputShape>
            <Hybridize>True</Hybridize>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Quantization>True</Quantization>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>AlexNet</Name>
            <Precision>FP32</Precision>
            <SourceFramework>MXNet</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>MXNet</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>Async</Mode>
            <InputName>data</InputName>
            <InputShape>1 3 224 224</InputShape>
            <Hybridize>True</Hybridize>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Quantization></Quantization>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>AlexNet</Name>
            <Precision>INT8</Precision>
            <SourceFramework>MXNet</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>MXNet</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Mode>Async</Mode>
            <InputName>data</InputName>
            <InputShape>1 3 224 224</InputShape>
            <Hybridize>True</Hybridize>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Quantization>True</Quantization>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>AlexNet</Name>
            <Precision>FP32</Precision>
            <SourceFramework>TVM</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TVM</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <Framework>MXNet</Framework>
            <InputShape>1 3 224 224</InputShape>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Layout>NCHW</Layout>
            <OptimizationLevel></OptimizationLevel>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>alexnet</Name>
            <Precision>FP32</Precision>
            <SourceFramework>TVM</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TVM</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <Framework>PyTorch</Framework>
            <InputShape>1 3 224 224</InputShape>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Layout>NCHW</Layout>
            <OptimizationLevel>2</OptimizationLevel>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>efficientnet-b0</Name>
            <Precision>FP32</Precision>
            <SourceFramework>TVM</SourceFramework>
            <ModelPath>./working_dir_smoke/public/efficientnet-b0-pytorch/efficientnet-b0.onnx</ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TVM</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <Framework>ONNX</Framework>
            <InputShape>1 3 224 224</InputShape>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <Layout>NCHW</Layout>
            <ChannelSwap></ChannelSwap>
            <OptimizationLevel>3</OptimizationLevel>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>efficientnet_b0</Name>
            <Precision>FP32</Precision>
            <SourceFramework>TVM</SourceFramework>
            <ModelPath>./working_dir_smoke/efficientnet_b0/efficientnet_b0.json</ModelPath>
            <WeightsPath>./working_dir_smoke/efficientnet_b0/efficientnet_b0.params</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>TVM</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <Framework>TVM</Framework>
            <InputShape>1 3 224 224</InputShape>
            <Normalize>True</Normalize>
            <Mean>0.485 0.456 0.406</Mean>
            <Std>0.229 0.224 0.225</Std>
            <ChannelSwap></ChannelSwap>
            <Layout>NCHW</Layout>
            <OptimizationLevel>3</OptimizationLevel>
        </FrameworkDependent>
    </Test>
    <Test>
    <Model>
        <Task>classification</Task>
        <Name>resnet50-tvm-optimized</Name>
        <Precision>FP32</Precision>
        <SourceFramework>TVM</SourceFramework>
        <ModelPath>working_dir_smoke/resnet50/resnet50.so</ModelPath>
        <WeightsPath></WeightsPath>
    </Model>
    <Dataset>
        <Name>Data</Name>
        <Path>./black_square.jpg</Path>
    </Dataset>
    <FrameworkIndependent>
        <InferenceFramework>TVM</InferenceFramework>
        <BatchSize>1</BatchSize>
        <Device>CPU</Device>
        <IterationCount>5</IterationCount>
        <TestTimeLimit>1</TestTimeLimit>
    </FrameworkIndependent>
    <FrameworkDependent>
        <InputName>data</InputName>
        <Framework>TVM</Framework>
        <InputShape>1 3 224 224</InputShape>
        <Normalize>False</Normalize>
        <Mean>0.485 0.456 0.406</Mean>
        <Std>0.229 0.224 0.225</Std>
        <ChannelSwap></ChannelSwap>
        <Layout>NCHW</Layout>
        <OptimizationLevel>0</OptimizationLevel>
    </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>mobilenet-v1-1.0-224-tf</Name>
            <Precision>FP32</Precision>
            <SourceFramework>tf</SourceFramework>
            <ModelPath>./working_dir_smoke/public/mobilenet-v1-1.0-224-tf/mobilenet_v1_1.0_224_frozen.pb</ModelPath>
            <WeightsPath>none</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>OpenCV DNN Python</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <Backend>DNN</Backend>
            <InputName></InputName>
            <OutputNames></OutputNames>
            <InputScale>127.5</InputScale>
            <InputShape>224 224 3</InputShape>
            <Mean>127.5 127.5 127.5</Mean>
            <Std></Std>
            <SwapRB>True</SwapRB>
            <Crop></Crop>
            <Layout></Layout>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>alexnet</Name>
            <Precision>FP32</Precision>
            <SourceFramework>PyTorch</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
            <Module>torchvision.models</Module>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>PyTorch</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <InputShape>[1,3,224,224]</InputShape>
            <InputScale>[58.395,57.12,57.375]</InputScale>
            <Mean>[123.675,116.28,103.53]</Mean>
            <OutputName></OutputName>
            <ModelType></ModelType>
            <InferenceMode></InferenceMode>
            <InterOpThreads></InterOpThreads>
            <IntraOpThreads>2</IntraOpThreads>
        </FrameworkDependent>
    </Test>
        <Test>
        <Model>
            <Task>classification</Task>
            <Name>resnet-50-pytorch</Name>
            <Precision>FP32</Precision>
            <SourceFramework>PyTorch</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>PyTorch</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <InputShape>[1,3,224,224]</InputShape>
            <Mean>[123.675,116.28,103.53]</Mean>
            <InputScale>[58.395,57.12,57.375]</InputScale>
            <OutputName>prob</OutputName>
            <ModelType></ModelType>
            <InferenceMode></InferenceMode>
            <TensorRTPrecision></TensorRTPrecision>
            <UseModelConfig>True</UseModelConfig>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>resnet-50-pytorch</Name>
            <Precision>FP32</Precision>
            <SourceFramework>PyTorch</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>PyTorch</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <InputShape>[1,3,224,224]</InputShape>
            <Mean>[123.675,116.28,103.53]</Mean>
            <InputScale>[58.395,57.12,57.375]</InputScale>
            <OutputName>prob</OutputName>
            <ModelType></ModelType>
            <InferenceMode></InferenceMode>
            <TensorRTPrecision></TensorRTPrecision>
            <UseModelConfig>True</UseModelConfig>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>resnet-50-pytorch</Name>
            <Precision>FP32</Precision>
            <SourceFramework>PyTorch</SourceFramework>
            <ModelPath></ModelPath>
            <WeightsPath></WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>PyTorch</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <InputName>data</InputName>
            <InputShape>[1,3,224,224]</InputShape>
            <Mean>[123.675,116.28,103.53]</Mean>
            <InputScale>[58.395,57.12,57.375]</InputScale>
            <OutputName>prob</OutputName>
            <ModelType></ModelType>
            <InferenceMode></InferenceMode>
            <TensorRTPrecision></TensorRTPrecision>
            <UseModelConfig>True</UseModelConfig>
        </FrameworkDependent>
    </Test>
    <Test>
        <Model>
            <Task>classification</Task>
            <Name>efficientnet-b0-pytorch</Name>
            <Precision>default</Precision>
            <SourceFramework>PyTorch</SourceFramework>
            <ModelPath>./working_dir_smoke/public/efficientnet-b0-pytorch/efficientnet-b0.onnx</ModelPath>
            <WeightsPath>None</WeightsPath>
        </Model>
        <Dataset>
            <Name>Data</Name>
            <Path>./black_square.jpg</Path>
        </Dataset>
        <FrameworkIndependent>
            <InferenceFramework>ONNX Runtime Python</InferenceFramework>
            <BatchSize>1</BatchSize>
            <Device>CPU</Device>
            <IterationCount>5</IterationCount>
            <TestTimeLimit>1</TestTimeLimit>
        </FrameworkIndependent>
        <FrameworkDependent>
            <ChannelSwap></ChannelSwap>
            <Mean>[123.675,116.28,103.53]</Mean>
            <InputScale>[58.395,57.12,57.375]</InputScale>
            <InputShape></InputShape>
            <InputName></InputName>
            <Layout></Layout>
            <ExecutionProviders></ExecutionProviders>
            <ThreadCount></ThreadCount>
            <InterThreadCount></InterThreadCount>
            <ExecutionMode></ExecutionMode>
        </FrameworkDependent>
    </Test>
</Tests>
